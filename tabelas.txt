CREATE TABLE imgPerfilUsuario (
  id INT AUTO_INCREMENT PRIMARY KEY,
  url TEXT NOT NULL,
  public_id VARCHAR(255) NOT NULL,
  originalname VARCHAR(255),
  mimetype VARCHAR(100),
  size INT,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE usuarios (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nome VARCHAR(150) NOT NULL,
  cpf CHAR(11) NOT NULL UNIQUE,
  celular VARCHAR(15),
  email VARCHAR(120) NOT NULL UNIQUE,
  senha VARCHAR(255) NOT NULL,
  logradouro VARCHAR(120),
  numero VARCHAR(10),
  complemento VARCHAR(50) NULL,
  bairro VARCHAR(80),
  cidade VARCHAR(100),
  estado CHAR(2),
  cep CHAR(8),
  ativo BOOLEAN DEFAULT TRUE,
  tipo ENUM('Admin', 'Cliente') DEFAULT 'Cliente',
  pontos INT DEFAULT 200,
  resetPasswordToken BOOLEAN DEFAULT NULL,
  resetPasswordExpires DATETIME DEFAULT NULL,
  imagemPerfilId INT NULL,
  CONSTRAINT fk_usuarios_imgPerfilUsuario FOREIGN KEY (imagemPerfilId) REFERENCES imgPerfilUsuario(id) ON DELETE SET NULL
);

CREATE TABLE beneficios (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nome VARCHAR(200) NOT NULL,
  endereco VARCHAR(500) NOT NULL,
  pontos INT NOT NULL,
  data DATE NOT NULL,
  quantidade INT NOT NULL
);


CREATE TABLE beneficiosDoUsuario (
  id INT AUTO_INCREMENT PRIMARY KEY,
  idUsuario INT NOT NULL,
  idBeneficio INT NOT NULL,
  FOREIGN KEY (idUsuario) REFERENCES usuarios(id) ON DELETE CASCADE,
  FOREIGN KEY (idBeneficio) REFERENCES beneficios(id) ON DELETE CASCADE
);

CREATE TABLE histPontos (
  id VARCHAR(100) PRIMARY KEY,
  pontos NUMERIC,
  data DATETIME,
  idUsuario INT NOT NULL,
  FOREIGN KEY (idUsuario) REFERENCES usuarios(id) ON DELETE CASCADE
);

CREATE TABLE histTransacoes (
  id INT AUTO_INCREMENT PRIMARY KEY,
  descricao VARCHAR(100),
  pontos NUMERIC,
  data DATETIME,
  idUsuario INT NOT NULL,
  FOREIGN KEY (idUsuario) REFERENCES usuarios(id) ON DELETE CASCADE
);